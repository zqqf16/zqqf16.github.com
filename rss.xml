<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
    <title>穷折腾</title>
    <link>https://blog.zorro.im</link>
	<description>zqqf16 的个人博客</description>
    <language>zh-cn</language>
    <generator>Peanut</generator>
    <item>
		<title>在 macOS 上编译 libimobiledevice</title>
		<link>https://blog.zorro.im/posts/2018-8-22-how-to-build-libimobiledevice.html</link>
		<description>&lt;h2 id=&#34;_1&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;最近给 &lt;a href=&#34;http://github.com/zqqf16/SYM&#34;&gt;SYM&lt;/a&gt; 添加了一个新功能：可以直接导入 iOS 设备上的崩溃日志，这个功能是通过 libimobiledevice 实现的。编译静态库的过程中踩了一些坑，在这里记录一下。&lt;/p&gt;
&lt;h2 id=&#34;_2&#34;&gt;编译步骤&lt;/h2&gt;
&lt;h3 id=&#34;_3&#34;&gt;准备工作&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;安装编译工具&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;brew install automake autoconf libtool
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;安装依赖库&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;brew install libplist usbmuxd
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id=&#34;openssl&#34;&gt;准备 OpenSSL&lt;/h3&gt;
&lt;p&gt;如果不想用 libimobiledevice 的库，而是直接用编译好的可执行文件，OpenSSL 可以省略，用  GnuTLS 代替。详见&lt;a href=&#34;https://github.com/libimobiledevice/libimobiledevice&#34;&gt;官方文档&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;用 OpenSSL 的好处是集成到其它 App 时，可以直接用 OpenSSL 的库，GnuTLS 的库怎么用还没研究……&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下载 OpenSSL 代码&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://www.openssl.org/source/openssl-1.0.2p.tar.gz -O openssl.tar.gz
tar vzxf openssl.tar.gz
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; openssl-1.0.2p
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;编译 &lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./Configure darwin64-x86_64-cc
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果需要指定支持的 macOS 最小版本，可以这样：&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./Configure darwin64-x86_64-cc -mmacosx-version-min&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;.11
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样可以避免集成到 App 时 Xcode 的 warning。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;创建 pc 文件&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;touch openssl.pc
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;写入以下内容：&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;prefix=/path/to/your/openssl-1.0.2p
exec_prefix=&lt;span class=&#34;cp&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prefix&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;}&lt;/span&gt;
libdir=&lt;span class=&#34;cp&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exec_prefix&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;}&lt;/span&gt;/lib
includedir=&lt;span class=&#34;cp&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prefix&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;}&lt;/span&gt;/include

Name: OpenSSL
Description: Secure Sockets Layer and cryptography libraries and tools
Version: 1.0.2p
Requires: libssl libcrypto
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;添加 pkg-config 路径&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PKG_CONFIG_PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/path/to/your/openssl-1.0.2p
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这一步是为了 pkg-config 能够索引到刚才编译的 OpenSSL。&lt;/p&gt;
&lt;h3 id=&#34;libimobiledevice&#34;&gt;编译 libimobiledevice&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;下载 libimobiledevice 代码&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://github.com/libimobiledevice/libimobiledevice/archive/master.zip -O libimobiledevice.zip
unzip libimobiledevice.zip
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; libimobiledevice-master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;配置 &amp;amp; 编译&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./autogen.sh
make
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果需要指定 macOS 的最小版本，可以这样：&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;make &lt;span class=&#34;nv&#34;&gt;CFLAGS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;-g -O2 -mmacosx-version-min=10.11&amp;#39;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;CXXFLAGS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;-g -O2 -mmacosx-version-min=10.11&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id=&#34;_4&#34;&gt;集成&lt;/h2&gt;
&lt;p&gt;libimobiledevice 的库在 &lt;code&gt;libimobiledevice-master/src/.libs&lt;/code&gt; 目录下，比如静态库是 &lt;strong&gt;libimobiledevice.a&lt;/strong&gt;。头文件在 &lt;code&gt;libimobiledevice-master/include&lt;/code&gt; 目录&lt;/p&gt;
&lt;p&gt;OpenSSL 的库在 &lt;code&gt;openssl-1.0.2p&lt;/code&gt; 目录下，静态库是 &lt;strong&gt;libcrypto.a&lt;/strong&gt; 和 &lt;strong&gt;libssl.a&lt;/strong&gt;。头文件在 &lt;code&gt;openssl-1.0.2p/include&lt;/code&gt; 目录。&lt;/p&gt;
&lt;p&gt;如果集成到 App，还需要 &lt;a href=&#34;https://github.com/libimobiledevice/libplist&#34;&gt;&lt;strong&gt;libplist&lt;/strong&gt;&lt;/a&gt; 以及 &lt;a href=&#34;https://github.com/libimobiledevice/libusbmuxd&#34;&gt;&lt;strong&gt;libusbmuxd&lt;/strong&gt;&lt;/a&gt; 两个库，可以直接用 brew 安装的那个，或者也可以自己编译，步骤与编译 libimobiledevice 类似，但是要简单很多，不依赖 OpenSSL。&lt;/p&gt;
&lt;p&gt;最后，欢迎体验最新版本的 &lt;a href=&#34;https://github.com/zqqf16/SYM/releases/latest&#34;&gt;SYM&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;-EOF-&lt;/p&gt;</description>
		<author>zqqf16</author>
		<copyright></copyright>
		<pubDate>Wed, 22 Aug 2018 00:00:00 +0800</pubDate>
    </item>
    <item>
		<title>安利一套iOS开发工具-libimobiledevice</title>
		<link>https://blog.zorro.im/posts/2018-5-6-libimobiledevice.html</link>
		<description>&lt;h2 id=&#34;_1&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;公司项目大了之后，Xcode 调试控制台输出的内容已经被各种各样的东西冲得七零八落。有时候自己加的 log 还没看见就被冲没了，影响调试效率。&lt;/p&gt;
&lt;p&gt;在 Xcode 还能支持插件的时代，可以用一些插件来过滤 log，但现在的版本已经不能用了。在搜索第三方 log 替代方案时，发现了 libimobiledevice。&lt;/p&gt;
&lt;h2 id=&#34;_2&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;libimobiledevice 是一个跨平台的连接 iOS 设备的软件库，可以用来操作 iOS 设备，比如读取设备信息、读取设备日志、获取设备屏幕截图、浏览 Document 文件夹等功能。Appium、iTools 等工具也是基于这个库。&lt;/p&gt;
&lt;h3 id=&#34;_3&#34;&gt;安装&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;brew install --HEAD libimobiledevice&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--HEAD&lt;/code&gt; 是为了基于最新代码安装，libimobiledevice 需要随着 iOS 版本升级来做调整，需要保持最新。&lt;/p&gt;
&lt;h3 id=&#34;_4&#34;&gt;使用&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;实时查看系统日志&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;idevicesyslog&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;由于 NSLog、DDlog 等默认会写到 iOS 系统日志里，所以这个工具可以用来实时查看调试日志。&lt;/p&gt;
&lt;p&gt;可以跟 grep、awk、sed 等命令组合来添加过滤条件:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;idevicesyslog | grep your_app_name&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;或者过滤掉一些乱七八糟的内容:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;idevicesyslog | grep -v xxx&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;获取设备截图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;idevicescreenshot&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查看设备信息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ideviceinfo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查看设备上已安装应用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ideviceinstaller -l&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;挂载应用的 Document 目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;需要安装 ifuse&lt;/p&gt;
&lt;p&gt;&lt;code&gt;brew cask install osxfuse ; brew install ifuse&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;创建挂载点&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo mkdir /Volumes/you_app_name.app&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;挂载 App 目录&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir /tmp/you_app_id
ifuse --container you.app.id /tmp/you_app_id
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;you.app.id&lt;/code&gt; 可以通过 &lt;code&gt;ideviceinstaller -l&lt;/code&gt; 得到，&lt;code&gt;-o allow_other&lt;/code&gt; 可以让非 root 用户来访问。&lt;/p&gt;
&lt;p&gt;打开目录&lt;/p&gt;
&lt;p&gt;&lt;code&gt;open /tmp/you_app_id&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;其它&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;libimobiledevice 提供了一些列 idevice 开头的工具，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;idevice_id&lt;/li&gt;
&lt;li&gt;idevicedebug&lt;/li&gt;
&lt;li&gt;ideviceinfo&lt;/li&gt;
&lt;li&gt;idevicescreenshot&lt;/li&gt;
&lt;li&gt;idevicebackup&lt;/li&gt;
&lt;li&gt;idevicedebugserverproxy&lt;/li&gt;
&lt;li&gt;idevicename&lt;/li&gt;
&lt;li&gt;idevicesyslog&lt;/li&gt;
&lt;li&gt;idevicebackup2&lt;/li&gt;
&lt;li&gt;idevicediagnostics&lt;/li&gt;
&lt;li&gt;idevicenotificationproxy&lt;/li&gt;
&lt;li&gt;idevicecrashreport       &lt;/li&gt;
&lt;li&gt;ideviceenterrecovery&lt;/li&gt;
&lt;li&gt;idevicepair&lt;/li&gt;
&lt;li&gt;idevicedate&lt;/li&gt;
&lt;li&gt;ideviceimagemounter&lt;/li&gt;
&lt;li&gt;ideviceprovision&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有兴趣的可以自己研究一下使用方法&lt;/p&gt;
&lt;p&gt;-EOF-&lt;/p&gt;</description>
		<author>zqqf16</author>
		<copyright></copyright>
		<pubDate>Sun, 06 May 2018 00:00:00 +0800</pubDate>
    </item>
    <item>
		<title>修复 macOS 不支持某些屏幕 HiDPI 显示的方法</title>
		<link>https://blog.zorro.im/posts/2018-5-3-macOS-hidpi.html</link>
		<description>&lt;h2 id=&#34;_1&#34;&gt;起因&lt;/h2&gt;
&lt;p&gt;多年前，高价搞到了一块 iPad5 屏幕的驱动版，想用一个二手的 iPad5 显示屏做一个 Macbook 的移动显示器。屏幕的分辨率是 2048x1536，HiDPI 模式下也就是 1024x768。买的时候没想那么多，想当然地认为既然 iOS 都支持这个分辨率，macOS 自然不再话下。&lt;/p&gt;
&lt;p&gt;然而事情并非如此，严重低估了 BugOS 的实力，屏幕插上之后，系统能识别出屏幕型号：Apple，但是死活不能支持 1024x768 HiDPI，甚至更奇葩的是，各种其他分辨率下的 HiDPI 都支持，唯独不支持正常的。当时试尽了各种方法，改 Plist，SwitchResX 等等，最终无功而返。反而 Window 10 支持得特别好，这个显示器后来只能作为我的台式机专用了。&lt;/p&gt;
&lt;h2 id=&#34;_2&#34;&gt;转机&lt;/h2&gt;
&lt;p&gt;后来在逛淘宝的时候，发现现在市面上的 HDMI 转 edp 驱动版已经很成熟了，一块驱动板加一个 13 寸的 2k 屏也很便宜，于是“贼心”不死打算再试一把。&lt;/p&gt;
&lt;p&gt;新买的屏幕是 2560x1440 分辨率的，转成 HiDPI 也就是 1280x720。然而，bugOS 问题依旧，死活不支持 1280x720 HiDPI ……&lt;/p&gt;
&lt;p&gt;后来偶然间搜到了一个帖子：&lt;a href=&#34;http://blog.thefelt.net/make-1280x720-hidpi-work-on-a-169-wqhd-display/&#34;&gt;Make 1280×720 HiDPI Work on a 16:9 WQHD Display&lt;/a&gt;，里面提到了一个解决方法，把分辨率设置成 2558x1440，也就是 HiDPI 下的 1279x720，问题果然得到了解决……当时心中大概奔腾过了一万只草泥马……&lt;/p&gt;
&lt;p&gt;后来又用这个方法，把 iPad 拿块屏的分辨率改成了 2046x1534（1023x767 HiDPI），果然也好用了……&lt;/p&gt;
&lt;p&gt;不得不感叹 macOS 的神奇逻辑&lt;/p&gt;
&lt;h2 id=&#34;_3&#34;&gt;后来&lt;/h2&gt;
&lt;p&gt;发现市面上 3D 打印的价格已经很便宜，当年设计了一个外壳，淘宝询价要 800+，现在同样的外壳大概只要 150 不到。于是就兴高采烈地去淘宝打印了外壳，拿回来给 iPad 屏幕组装上，开机，发现屏幕碎了……&lt;/p&gt;
&lt;p&gt;所以，DIY 这个显示器的整个过程中，唯一的收获就是 macOS 如果不支持某些分辨率下的 HiDPI，不妨把分辨率改小2像素试试～&lt;/p&gt;
&lt;p&gt;-EOF-&lt;/p&gt;</description>
		<author>zqqf16</author>
		<copyright></copyright>
		<pubDate>Thu, 03 May 2018 00:00:00 +0800</pubDate>
    </item>
    <item>
		<title>清理 Safari HSTS 记录</title>
		<link>https://blog.zorro.im/posts/2017-10-12-how-to-clear-safari-hsts.html</link>
		<description>&lt;p&gt;之前用来放博客的 vps 在这次清洗活动中阵亡，思考再三，还是回到了 Github Pages。这点访问量不值得再折腾了...&lt;/p&gt;
&lt;p&gt;迁移过程还算正常，用脚本把 Ghost 的数据库里的文章重新转换成 markdown 文件，并且全面接入 jekyll。&lt;/p&gt;
&lt;p&gt;然而，由于以前启用了 HTTPS，而现在只能用 HTTP，Safari 在访问的时候总是强制转换成 HTTPS（HSTS机制），进而导致无法访问。&lt;/p&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;关掉 Safari&lt;/li&gt;
&lt;li&gt;&lt;code&gt;killall nsurlstoraged&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rm -f ~/Library/Cookies/HSTS.plist&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;code&gt;launchctl start /System/Library/LaunchAgents/com.apple.nsurlstoraged.plist&lt;/code&gt; &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;参考链接 &lt;a href=&#34;https://apple.stackexchange.com/a/288002&#34;&gt;https://apple.stackexchange.com/a/288002&lt;/a&gt;&lt;/p&gt;</description>
		<author>zqqf16</author>
		<copyright></copyright>
		<pubDate>Thu, 12 Oct 2017 00:00:00 +0800</pubDate>
    </item>
    <item>
		<title>两个 Xcode Build Script</title>
		<link>https://blog.zorro.im/posts/2017-06-26-two-xcode-build-scripts.html</link>
		<description>&lt;p&gt;检查 Localizable.strings 是否有语法错误&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Checking Localizable.strings ...&amp;quot;&lt;/span&gt;
plutil -lint &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;SRCROOT&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/path/to/your/Localizable.strings

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$?&lt;/span&gt; -ne &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;error: Localizable.strings 有语法错误，请检查错误信息&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;检查 Assets.car 中是否包含 P3 色域的图片，防止在 iOS 9.x 设备上出现诡异的崩溃问题。&lt;/p&gt;
&lt;div class=&#34;codehilite&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Checking Assets.car ...&amp;quot;&lt;/span&gt;
xcrun --sdk iphoneos assetutil --info &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;CODESIGNING_FOLDER_PATH&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/Assets.car &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep -q &lt;span class=&#34;s2&#34;&gt;&amp;quot;DisplayGamut.*P3&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$$&lt;/span&gt;? -eq &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;error: Assets.car 中含有 P3 色域的图片，请检查错误信息&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;-EOF-&lt;/p&gt;</description>
		<author>zqqf16</author>
		<copyright></copyright>
		<pubDate>Mon, 26 Jun 2017 00:00:00 +0800</pubDate>
    </item>
</channel>
</rss>